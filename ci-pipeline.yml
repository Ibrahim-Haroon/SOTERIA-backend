name: backend

on:
  push:
    paths:
      - '**.py'
      - 'requirements.txt'
      - '.github/workflows/ci-pipeline.yml'
      
  pull_request: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

  lint:
    runs-on: ubuntu-latest

    needs: build
  
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11.0

      - name: Install pylint
        run: python -m pip install --upgrade pip && pip install pylint
    
      - name: Lint with pylint
        run: |
          pylint src/ || true

  test:
    runs-on: ubuntu-latest

    needs: build
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11.0

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install pip dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage pylint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Test with Django
        run: python -m coverage run --branch --source=src manage.py test

      - name: Test with pytest
        run: python -m coverage run --branch --append --source=src -m pytest

      - name: Generate coverage report
        run: coverage report -m > coverage_report.txt

      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage_report.txt
